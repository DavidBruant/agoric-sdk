name: Test all Packages

# run CI on pushes to master, and on all PRs (even the ones that target other
# branches)

on:
 push:
   branches: [master]
 pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: cache node modules
      uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
    - name: cache Go modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('packages/cosmic-swingset/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    # 'yarn install' must be done at the top level, to build all the
    # cross-package symlinks
    - name: yarn install
      run: yarn install
    - name: check dependencies
      run: yarn check-dependencies
    # 'yarn build' loops over all workspaces
    - name: yarn build
      run: yarn build
    # We run separate steps for each package, to make it easier to drill down
    # into errors. If we wanted to just run everything, run 'yarn test' from
    # the top level.
    #- name: yarn test (everything)
    #  run: yarn test
    - name: yarn test (acorn-eventual-send)
      run: cd packages/acorn-eventual-send && yarn test
    - name: yarn test (agoric-cli)
      run: cd packages/agoric-cli && yarn test
    - name: yarn test (assert)
      run: cd packages/assert && yarn test
    - name: yarn test (autoswap-frontend)
      run: cd packages/autoswap-frontend && yarn test
    - name: yarn test (bundle-source)
      run: cd packages/bundle-source && yarn test
    - name: yarn test (captp)
      run: cd packages/captp && yarn test
    - name: yarn test (cosmic-swingset)
      run: cd packages/cosmic-swingset && yarn test
    - name: yarn test (default-evaluate-options)
      run: cd packages/default-evaluate-options && yarn test
    - name: yarn test (deployment)
      run: cd packages/deployment && yarn test
    - name: yarn test (ERTP)
      run: cd packages/ERTP && yarn test
    - name: yarn test (evaluate)
      run: cd packages/evaluate && yarn test
    - name: yarn test (eventual-send)
      run: cd packages/eventual-send && yarn test
    - name: yarn test (import-manager)
      run: cd packages/import-manager && yarn test
    - name: yarn test (make-promise)
      run: cd packages/make-promise && yarn test
    - name: yarn test (marshal)
      run: cd packages/marshal && yarn test
    - name: yarn test (pixel-demo)
      run: cd packages/pixel-demo && yarn test
    - name: yarn test (registrar)
      run: cd packages/registrar && yarn test
    - name: yarn test (same-structure)
      run: cd packages/same-structure && yarn test
    - name: yarn test (sharing-service)
      run: cd packages/sharing-service && yarn test
    - name: yarn test (sparse-ints)
      run: cd packages/sparse-ints && yarn test
    - name: yarn test (spawner)
      run: cd packages/spawner && yarn test
    - name: yarn test (store)
      run: cd packages/store && yarn test
    - name: yarn test (swing-store-lmdb)
      run: cd packages/swing-store-lmdb && yarn test
    - name: yarn test (swing-store-simple)
      run: cd packages/swing-store-simple && yarn test
    - name: yarn test (SwingSet)
      run: cd packages/SwingSet && yarn test
    - name: yarn test (swingset-runner)
      run: cd packages/swingset-runner && yarn test
    - name: yarn test (tame-metering)
      run: cd packages/tame-metering && yarn test
    - name: yarn test (transform-eventual-send)
      run: cd packages/transform-eventual-send && yarn test
    - name: yarn test (transform-metering)
      run: cd packages/transform-metering && yarn test
    - name: yarn test (wallet-frontend)
      run: cd packages/wallet-frontend && yarn test
    - name: yarn test (weak-store)
      run: cd packages/weak-store && yarn test
    - name: yarn test (zoe)
      run: cd packages/zoe && yarn test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: lint check
      run: yarn lint-check
